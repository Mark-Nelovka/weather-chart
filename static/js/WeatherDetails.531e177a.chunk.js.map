{"version":3,"file":"static/js/WeatherDetails.531e177a.chunk.js","mappings":"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","sources":["RezizableBox.tsx","components/Chart/Chart.tsx","webpack://weather-chart/./src/pages/WeatherDetails/weatDet.module.css?71c9","pages/WeatherDetails/weatherDetails.tsx"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport { ResizableBox as ReactResizableBox } from \"react-resizable\";\nimport \"react-resizable/css/styles.css\";\nimport { IChartContainerProps } from \"./interfaces/Chart\";\n\nexport default function ResizableBox({\n  children,\n  width = 1100,\n  height = 300,\n  resizable = true,\n  style = {},\n  className = \"\",\n}: IChartContainerProps) {\n  return (\n    <Box\n      sx={{\n        marginLeft: 2,\n        paddingBottom: 2,\n      }}\n    >\n      <Box\n        sx={{\n          display: \"inline-block\",\n          width: \"auto\",\n          background: \"white\",\n          padding: \".5rem\",\n          borderRadius: \"0.5rem\",\n          ...style,\n        }}\n      >\n        {resizable ? (\n          <ReactResizableBox width={width} height={height}>\n            <Box\n              sx={{\n                width: \"100%\",\n                height: \"100%\",\n              }}\n              className={className}\n            >\n              {children}\n            </Box>\n          </ReactResizableBox>\n        ) : (\n          <Box\n            sx={{\n              width: `${width}px`,\n              height: `${height}px`,\n            }}\n            className={className}\n          >\n            {children}\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { AxisOptions, Chart } from \"react-charts\";\nimport ResizableBox from \"../../RezizableBox\";\nimport { IChartProps, MyDatum } from \"../../interfaces/Chart\";\n\nfunction MyChart({ historyData }: IChartProps) {\n  const dataTest: MyDatum[] = [];\n\n  historyData.reduce((acc: number, el) => {\n    if (acc === 24) {\n      return acc;\n    }\n\n    dataTest.push({ date: String(acc), temp: el.main.temp });\n\n    return acc + 1;\n  }, 1);\n\n  const data = [{ data: dataTest }];\n\n  const secondaryAxes = React.useMemo(\n    (): AxisOptions<MyDatum>[] => [\n      {\n        getValue: (datum) => datum.temp,\n        elementType: \"line\",\n      },\n    ],\n    []\n  );\n\n  const primaryAxis = React.useMemo(\n    (): AxisOptions<MyDatum> => ({\n      getValue: (datum) => datum.date,\n    }),\n    []\n  );\n\n  return (\n    <ResizableBox>\n      <Chart\n        options={{\n          data,\n          primaryAxis,\n          secondaryAxes,\n          renderSVG: () => (\n            <defs>\n              <linearGradient id=\"1\" x1=\"0\" x2=\"0\" y1=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#17EAD9\" />\n                <stop offset=\"100%\" stopColor=\"#6078EA\" />\n              </linearGradient>\n            </defs>\n          ),\n        }}\n      />\n    </ResizableBox>\n  );\n}\n\nexport default MyChart;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionWeatherDet\":\"weatDet_sectionWeatherDet__2kgsU\",\"detailCardHeader\":\"weatDet_detailCardHeader__TnM0F\",\"globalContainer\":\"weatDet_globalContainer__IhB1n\",\"detailContainerCard\":\"weatDet_detailContainerCard__Vkz5b\",\"detailContainerInfo\":\"weatDet_detailContainerInfo__nEoFQ\",\"detailContainerCenter\":\"weatDet_detailContainerCenter__FFDUb\",\"timeContainer\":\"weatDet_timeContainer__kcyDs\",\"boxSun\":\"weatDet_boxSun__mFUOD\",\"boxMoon\":\"weatDet_boxMoon__uB0Uh\"};","import { Card, Box, Typography } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hook\";\nimport { getCityWithDetails } from \"../../redux/weatherDetails/weatDetOperations\";\nimport MyChart from \"../../components/Chart/Chart\";\nimport Loader from \"../../components/Loader\";\nimport s from \"./weatDet.module.css\";\n\nexport default function WeatherDetailsPage() {\n  const cityWithState = useAppSelector(\n    (state) => state.weatherDetails.weatherDetails\n  );\n  const pending = useAppSelector((state) => state.weatherDetails.pending);\n\n  const params = useParams();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getCityWithDetails({ cityForSearch: params.city! }));\n  }, [params, dispatch]);\n\n  return (\n    <section className={s.sectionWeatherDet}>\n      <Container>\n        <Card>\n          {pending && <Loader />}\n          {!pending &&\n            cityWithState.length > 0 &&\n            cityWithState.map((state) => {\n              return (\n                <Box key={state.id}>\n                  <Box className={s.detailCardHeader}>\n                    <Typography>\n                      {state.currentDate.dayInWeek}:\n                      {Math.floor(state.main.temp)}\n                      <span>{\" \\u00b0\"}</span>C\n                    </Typography>\n                    <Typography>{`${state.currentDate.hours}:${state.currentDate.minutes}`}</Typography>\n                  </Box>\n                  <Box className={s.globalContainer}>\n                    <Box className={s.detailContainerCard}>\n                      <Card className={s.detailContainerInfo}>\n                        <Typography>\n                          Temperature: {Math.floor(state.main.temp)}\n                          <span>{\" \\u00b0\"}</span>C\n                        </Typography>\n                        <Typography>\n                          Feels like: {Math.floor(state.main.feels_like)}\n                          <span>{\" \\u00b0\"}</span>C\n                        </Typography>\n                        <Typography>\n                          Temperature_min: {Math.floor(state.main.temp_min)}\n                          <span>{\" \\u00b0\"}</span>C\n                        </Typography>\n                        <Typography>\n                          Temperature_max: {Math.floor(state.main.temp_max)}\n                          <span>{\" \\u00b0\"}</span>C\n                        </Typography>\n                        <Typography>\n                          Pressure: {Math.floor(state.main.pressure)} hPa\n                        </Typography>\n                      </Card>\n                      <Box className={s.detailContainerCenter}>\n                        <Typography>{state.name}</Typography>\n                      </Box>\n                      <Card className={s.detailContainerInfo}>\n                        <Typography>\n                          Humidity: {state.main.humidity} %\n                        </Typography>\n                        <Typography>\n                          Wind speed: {state.wind.speed} m/s\n                        </Typography>\n                        <Typography>\n                          Wind direction: {state.wind.deg} deg\n                        </Typography>\n                        <Typography>\n                          Wind gust: {state.wind.gust ? state.wind.gust : 0} m/s\n                        </Typography>\n                        <Typography>Clouds: {state.clouds.all} %</Typography>\n                      </Card>\n                    </Box>\n                    <MyChart historyData={state.history} />\n                  </Box>\n                </Box>\n              );\n            })}\n        </Card>\n      </Container>\n    </section>\n  );\n}\n"],"names":["ResizableBox","children","width","height","resizable","style","className","Box","sx","marginLeft","paddingBottom","display","background","padding","borderRadius","historyData","dataTest","reduce","acc","el","push","date","String","temp","main","data","secondaryAxes","React","getValue","datum","elementType","primaryAxis","options","renderSVG","id","x1","x2","y1","y2","offset","stopColor","WeatherDetailsPage","cityWithState","useAppSelector","state","weatherDetails","pending","params","useParams","dispatch","useAppDispatch","useEffect","getCityWithDetails","cityForSearch","city","s","Container","Card","Loader","length","map","Typography","currentDate","dayInWeek","Math","floor","hours","minutes","feels_like","temp_min","temp_max","pressure","name","humidity","wind","speed","deg","gust","clouds","all","history"],"sourceRoot":""}